{"version":3,"sources":["logo.svg","Component/Input/Message.jsx","Component/Input/FraksiCard.jsx","Component/Input/Input.jsx","Component/Title/TextTitle.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Message","react_default","a","createElement","style","color","margin","this","props","messages","React","Component","FraksiCard","className","marginLeft","display","marginRight","width","height","marginTop","fontSize","nominal","borderTop","jumlah","Input","window","$","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fungsiHitung","angka","hasil","sisa","console","log","fraksi","length","i","hitung","parseInt","push","validateString","string","valid","match","toLowerCase","includes","indexOf","setState","message","numbers","handleKeyup","e","input_value","document","getElementById","value","hasilHitung","keyCode","state","id","type","placeholder","onKeyUp","Input_Message","textAlign","map","element","Input_FraksiCard","TextTitle","title","App","react","Title_TextTitle","Component_Input_Input","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.355814ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nclass Message extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: \"red\",\r\n          margin: \"0 auto\"\r\n        }}\r\n      >\r\n        <b>{this.props.messages}</b>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nclass FraksiCard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"card bg-light text-dark\"\r\n        style={{\r\n          marginLeft: \"20px\",\r\n          display: \"inline-block\",\r\n          marginRight: \"20px\",\r\n          width: \"150px\",\r\n          height: \"135px\"\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            marginTop: \"10px\",\r\n            fontSize: \"25px\"\r\n          }}\r\n        >\r\n          <b>{this.props.nominal}</b>\r\n        </div>\r\n        <div\r\n          className=\"card-footer\"\r\n          style={{\r\n            borderTop: \"unset\"\r\n          }}\r\n        >\r\n          <b>{this.props.jumlah}</b>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FraksiCard;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\nimport Message from \"./Message\";\r\nimport FraksiCard from \"./FraksiCard\";\r\nconst $ = window.$;\r\n\r\nclass Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.fraksi = [100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 100, 10];\r\n\r\n    this.state = {\r\n      nominal: 0,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  fungsiHitung = angka => {\r\n    var hasil = [];\r\n    var sisa = angka;\r\n    console.log(this.fraksi.length);\r\n    for (var i = 0; i < this.fraksi.length; i++) {\r\n      if (angka / this.fraksi[i] >= 1) {\r\n        var hitung = parseInt(sisa / this.fraksi[i]);\r\n        if (hitung > 0) {\r\n          //   hasil[String(this.fraksi[i])] = hitung;\r\n          hasil.push({ fraksi: this.fraksi[i], jumlah: hitung });\r\n          sisa = sisa % this.fraksi[i];\r\n        }\r\n      }\r\n    }\r\n    console.log(hasil);\r\n    return hasil;\r\n  };\r\n\r\n  validateString = string => {\r\n    let valid;\r\n    if (string.match(/[A-Z,]/i)) {\r\n      if (string.toLowerCase().includes(\"rp\")) {\r\n        if (string.toLowerCase().indexOf(\"rp\") > 0) {\r\n          this.setState({\r\n            message: \"Wrong Position of Rp\"\r\n          });\r\n          valid = false;\r\n        } else if (string.indexOf(\" \") > 2) {\r\n          this.setState({\r\n            message: \"Wrong Position of space\"\r\n          });\r\n          valid = false;\r\n        } else {\r\n          this.setState({\r\n            message: \"\"\r\n          });\r\n          valid = true;\r\n        }\r\n      } else if (string.includes(\" \") || string.includes(\",\")) {\r\n        this.setState({\r\n          message: \"Invalid Separator\"\r\n        });\r\n\r\n        valid = false;\r\n      } else {\r\n        this.setState({\r\n          message: \"Invalid Character\"\r\n        });\r\n        valid = false;\r\n      }\r\n    } else {\r\n      this.setState({\r\n        message: \"\"\r\n      });\r\n\r\n      valid = true;\r\n    }\r\n    if (valid) {\r\n      var numbers = string.match(/[0-9]+/g);\r\n      console.log(numbers);\r\n    }\r\n    return numbers;\r\n  };\r\n\r\n  handleKeyup = e => {\r\n    let input_value = document.getElementById(\"input_nominal\").value;\r\n\r\n    this.validateString(input_value);\r\n\r\n    this.setState({\r\n      hasilHitung: \"\"\r\n    });\r\n\r\n    if (e.keyCode === 13) {\r\n      if (this.validateString(input_value)) {\r\n        this.setState(\r\n          {\r\n            nominal: parseInt(this.validateString(input_value))\r\n          },\r\n          () => {\r\n            let hasil = this.fungsiHitung(this.state.nominal);\r\n            this.setState(\r\n              {\r\n                hasilHitung: hasil\r\n              },\r\n              () => console.log(this.state)\r\n            );\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"card-body row no-gutters align-items-center\">\r\n          <div className=\"input-outer\">\r\n            <input\r\n              id=\"input_nominal\"\r\n              className=\"input-form form-control form-control-lg\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Valid Number\"\r\n              onKeyUp={this.handleKeyup}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Message messages={this.state.message} />\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }} className=\"text-center\">\r\n          {this.state.hasilHitung\r\n            ? this.state.hasilHitung.map(element => (\r\n                <FraksiCard nominal={element.fraksi} jumlah={element.jumlah} />\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst TextTitle = props => (\r\n  <div style={{ margin: \"0 auto\", textAlign: \"center\", fontSize: \"65px\" }}>\r\n    {props.title}\r\n  </div>\r\n);\r\n\r\nexport default TextTitle;\r\n","import React, { Fragment } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Input from \"./Component/Input/Input\";\r\nimport TextTitle from \"./Component/Title/TextTitle\";\r\n\r\nconst App = () => (\r\n  <Fragment>\r\n    <TextTitle title={\"Try Me\"} />\r\n    <Input />\r\n  </Fragment>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}